{"version":3,"sources":["BooksAPI.js","component/BookList/BookshelfChanger.js","component/BookList/Book.js","component/BookList/Bookshelf.js","component/BookList/Bookcase.js","component/BookList/OpenSearchButton.js","component/BookList/BookList.js","component/BookSearch/SearchResults.js","component/BookSearch/CloseSearchButton.js","component/BookSearch/SearchBooksInput.js","component/BookSearch/SearchBar.js","component/BookSearch/BookSearch.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","BookshelfChanger","props","value","setValue","useState","shelf","_jsx","className","children","_jsxs","onChange","event","preventDefault","target","onMove","book","disabled","Book","style","width","height","backgroundImage","imageLinks","thumbnail","title","authors","join","Bookshelf","books","booksOnThisShelf","filter","key","name","map","id","Bookcase","bookshelves","OpenSearchButton","Link","to","BookList","SearchResults","myBooks","searchBooks","updatedBooks","b","CloseSearchButton","onResetSearch","onClick","SearchBookInput","type","placeholder","onSearch","autoFocus","SearchBar","SearchBooksInput","BookSearch","BooksApp","setMyBooks","setSearchBooks","useEffect","fetch","then","res","json","data","moveBook","update","method","body","JSON","stringify","BooksAPI","concat","searchForBooks","debounce","query","length","search","maxResults","error","resetSearch","Route","exact","path","render","ReactDOM","BrowserRouter","basename","App","document","getElementById"],"mappings":"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","file":"static/js/main.03b65ec3.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React, {useState} from \"react\";\n\nconst BookshelfChanger = (props) => {\n    const [value, setValue] = useState(props.shelf);\n\n    const handleChange = (event) => {\n        event.preventDefault();\n        setValue(event.target.value);\n        props.onMove(props.book, event.target.value);\n    };\n\n    return (\n        <div className=\"book-shelf-changer\">\n            <select value={value} onChange={handleChange}>\n                <option value=\"none\" disabled>\n                Move to...\n                </option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n            </select>\n        </div>\n    );\n}\n\nexport default BookshelfChanger;","import React from \"react\";\nimport BookshelfChanger from './BookshelfChanger';\n\nconst Book = (props) => {\n    const { book, shelf, onMove } = props;\n    return (\n        <li>\n            <div className=\"book\">\n                <div className=\"book-top\">\n                    <div\n                        className=\"book-cover\"\n                        style={{\n                            width: 128,\n                            height: 193,\n                            backgroundImage: `url(${book.imageLinks.thumbnail})`,\n                        }}\n                    ></div>\n                <BookshelfChanger book={book} shelf={shelf} onMove={onMove} />\n                </div>\n                <div className=\"book-title\">{book.title}</div>\n                <div className=\"book-authors\">\n                    {book.authors && book.authors.join(\", \")}\n                </div>\n            </div>\n        </li>\n    );\n};\n\nexport default Book;","import React from 'react';\nimport Book from './Book';\n\nconst Bookshelf = (props) => {\n    const { shelf, books, onMove } = props;\n    const booksOnThisShelf = books.filter((book) => book.shelf === shelf.key);\n    return (\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{shelf.name}</h2>\n            <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n                {booksOnThisShelf.map((book) => (\n                <Book key={book.id} book={book} shelf={shelf.key} onMove={onMove} />\n                ))}\n            </ol>\n            </div>\n        </div>\n        );\n};\n\nexport default Bookshelf;","import React from \"react\";\nimport Bookshelf from './Bookshelf';\n\nconst Bookcase = (props) => {\n    const { bookshelves, books, onMove } = props;\n    return (\n        <div className=\"list-books-content\">\n            <div>\n            {bookshelves.map((shelf) => (\n                <Bookshelf\n                key={shelf.key}\n                shelf={shelf}\n                books={books}\n                onMove={onMove}\n                />\n            ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Bookcase;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst OpenSearchButton = () => {\n    return (\n        <div className=\"open-search\">\n            <Link to=\"Search\">\n                <button>Add a Book</button>\n            </Link>\n        </div>\n    );\n};\n\nexport default OpenSearchButton;","import React from 'react';\nimport Bookcase from './Bookcase';\nimport OpenSearchButton from './OpenSearchButton';\n\nconst BookList = (props) => {\n    const { bookshelves, books, onMove } = props;\n    return (\n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n                <h1>MyReads</h1>\n            </div>\n            <Bookcase bookshelves={bookshelves} books={books} onMove={onMove} />\n            <OpenSearchButton />\n        </div>\n    )\n}\n\nexport default BookList;","import React from \"react\";\nimport Book from \"../BookList/Book\";\n\nconst SearchResults = (props) => {\n    const { myBooks, searchBooks, onMove } = props;\n\n    const updatedBooks = searchBooks.map((book) => {\n        myBooks.map((b) => {\n        if (b.id === book.id) {\n            book.shelf = b.shelf;\n        }\n        return b;\n        });\n        return book;\n    });\n    return (\n        <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n        {updatedBooks.map((book) => (\n            <Book\n                key={book.id}\n                book={book}\n                shelf={book.shelf ? book.shelf : \"none\"}\n                onMove={onMove}\n            />\n            ))}\n        </ol>\n        </div>\n    );\n};\n\nexport default SearchResults;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CloseSearchButton = (props) => {\n    const { onResetSearch } = props;\n    return (\n        <Link to=\"/\">\n            <button className=\"close-search\" onClick={onResetSearch}>\n            Close\n            </button>\n        </Link>\n        );\n};\n\nexport default CloseSearchButton;","import React, { useState } from \"react\";\n\nconst SearchBookInput = (props) => {\n    const [value, setValue] = useState(\"\");\n\n    const handleChange = (event) => {\n        event.preventDefault();\n        setValue(event.target.value);\n        props.onSearch(event.target.value);\n    }\n\n    return (\n        <div className=\"search-books-input-wrapper\">\n            <input\n                type=\"text\"\n                value= {value}\n                placeholder=\"Search by title, author, or ISBN\"\n                onChange={handleChange}\n                autoFocus\n            />\n        </div>\n    );\n}\n\n\nexport default SearchBookInput;","import React from  \"react\";\nimport CloseSearchButton from './CloseSearchButton';\nimport SearchBooksInput from './SearchBooksInput';\n\nconst SearchBar = (props) => {\n    const { onSearch, onResetSearch } = props;\n    return (\n        <div className=\"search-books-bar\">\n            <CloseSearchButton onResetSearch={onResetSearch} />\n            <SearchBooksInput onSearch={onSearch} />\n        </div>\n    );\n};\n\nexport default SearchBar;","import React from \"react\";\nimport SearchResults from './SearchResults';\nimport SearchBar from './SearchBar';\n\nconst BookSearch = (props) => {\n    const { searchBooks, myBooks, onSearch, onResetSearch, onMove } = props;\n    return (\n        <div className=\"search-books\">\n            <SearchBar onSearch={onSearch} onResetSearch={onResetSearch} />\n            <SearchResults\n                searchBooks={searchBooks}\n                myBooks={myBooks}\n                onMove={onMove}\n            />\n        </div>\n    );\n}\n\nexport default BookSearch;","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { debounce } from \"throttle-debounce\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport BookList from \"./component/BookList/BookList\";\nimport BookSearch from \"./component/BookSearch/BookSearch\";\n\nconst BooksApp = () => {\n    const bookshelves = [\n        { key: \"currentlyReading\", name: \"Currently Reading\" },\n        { key: \"wantToRead\", name: \"Want to Read\" },\n        { key: \"read\", name: \"Have Read\" },\n    ];\n\n    const [myBooks, setMyBooks] = useState([]);\n    const [searchBooks, setSearchBooks] = useState([]);\n\n    useEffect(() => {\n      BooksAPI.getAll().then((books) => {\n        setMyBooks(books);\n      });\n    }, [])\n\n    const moveBook = (book, shelf) => {\n        BooksAPI.update(book, shelf);\n\n        let updatedBooks = [];\n        updatedBooks = myBooks.filter((b) => b.id !== book.id);\n\n        if (shelf !== \"none\") {\n            book.shelf = shelf;\n            updatedBooks = updatedBooks.concat(book);\n        }\n        setMyBooks(\n            updatedBooks\n        );\n    };\n\n    const searchForBooks = debounce(300, false, (query) => {\n        if (query.length > 0) {\n            BooksAPI.search(query).then((books) => {\n                // console.log(books);\n                if (books.error) {\n                    setSearchBooks([]);\n                } else {\n                    setSearchBooks(books);\n                }\n            });\n        } else {\n            setSearchBooks([]);\n        }\n    });\n\n    const resetSearch = () => {\n        setSearchBooks([]);\n    };\n\n    return (\n        <div className=\"app\">\n            <Route\n                exact\n                path=\"/\"\n                render={() => (\n                    <BookList\n                        bookshelves={bookshelves}\n                        books={myBooks}\n                        onMove={moveBook}\n                    />\n                )}\n            />\n            <Route\n                path=\"/search\"\n                render={() => (\n                    <BookSearch\n                        searchBooks={searchBooks}\n                        myBooks={myBooks}\n                        onSearch={searchForBooks}\n                        onMove={moveBook}\n                        onResetSearch={resetSearch}\n                    />\n                )}\n            />\n        </div>\n    );\n};\n\nexport default BooksApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/My_Read\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}